# üöÄ Script PowerShell pour d√©ployer EazyStore sur GitHub
# Repository: https://github.com/parfait71/ecommerce-laravel

Write-Host "üõí D√©ploiement d'EazyStore sur GitHub..." -ForegroundColor Green

# ==========================================
# 1. INITIALISATION GIT
# ==========================================

Write-Host "üìÅ Initialisation Git..." -ForegroundColor Blue

# Initialiser Git (si pas d√©j√† fait)
if (-not (Test-Path ".git")) {
    git init
    Write-Host "‚úÖ Repository Git initialis√©" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Repository Git d√©j√† initialis√©" -ForegroundColor Green
}

# Configurer Git
git config user.name "Gnaw√© Parfait"
git config user.email "votre-email@gmail.com"

# ==========================================
# 2. CR√âER LE FICHIER .gitignore
# ==========================================

Write-Host "üìù Cr√©ation du fichier .gitignore..." -ForegroundColor Blue

$gitignore = @"
# Laravel
/node_modules
/public/hot
/public/storage
/storage/*.key
/vendor
.env
.env.backup
.phpunit.result.cache
docker-compose.override.yml
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log

# IDE
.idea/
.vscode/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Logs
*.log

# Cache
bootstrap/cache/
storage/framework/cache/
storage/framework/sessions/
storage/framework/views/

# Uploads (garder la structure mais pas les fichiers)
storage/app/public/uploads/*
!storage/app/public/uploads/.gitkeep

# Tests
.phpunit.cache/

# Composer
composer.phar

# Node
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment files
.env.local
.env.production
.env.staging

# Backup files
*.bak
*.backup
"@

$gitignore | Out-File -FilePath ".gitignore" -Encoding UTF8

# ==========================================
# 3. CR√âER LES DOSSIERS ET FICHIERS N√âCESSAIRES
# ==========================================

Write-Host "üìÅ Cr√©ation des dossiers n√©cessaires..." -ForegroundColor Blue

# Cr√©er les dossiers n√©cessaires
New-Item -ItemType Directory -Force -Path "storage/app/public/uploads"
New-Item -ItemType Directory -Force -Path "storage/framework/cache"
New-Item -ItemType Directory -Force -Path "storage/framework/sessions"
New-Item -ItemType Directory -Force -Path "storage/framework/views"
New-Item -ItemType Directory -Force -Path ".github/workflows"

# Cr√©er les fichiers .gitkeep
New-Item -ItemType File -Force -Path "storage/app/public/uploads/.gitkeep"
New-Item -ItemType File -Force -Path "storage/framework/cache/.gitkeep"
New-Item -ItemType File -Force -Path "storage/framework/sessions/.gitkeep"
New-Item -ItemType File -Force -Path "storage/framework/views/.gitkeep"

# ==========================================
# 4. AJOUTER TOUS LES FICHIERS
# ==========================================

Write-Host "üì¶ Ajout de tous les fichiers..." -ForegroundColor Blue
git add .

# ==========================================
# 5. PREMIER COMMIT
# ==========================================

Write-Host "üíæ Cr√©ation du commit initial..." -ForegroundColor Blue

$commitMessage = @"
üéâ Initial commit - EazyStore e-commerce platform

‚úÖ Fonctionnalit√©s compl√®tes:
- Front-office (catalogue, panier, commandes)
- Back-office (gestion produits, commandes, analytics)
- Syst√®me de paiement (Wave + Cash on Delivery)
- G√©n√©ration automatique de factures PDF
- Emails de confirmation automatiques
- Tests automatis√©s complets
- Documentation compl√®te

üë®‚Äçüíª √âquipe:
- Gnaw√© Parfait (Backend & API)
- Sokhna Ndack (Frontend & UI/UX)

üìö Documentation incluse:
- README.md (guide principal)
- GUIDE_PRESENTATION.md (guide de pr√©sentation)
- RESUME_PROJET.md (r√©sum√© complet)
- validate_project.php (validation automatique)

üöÄ Pr√™t pour la pr√©sentation!
"@

git commit -m $commitMessage

# ==========================================
# 6. CONFIGURER LA BRANCHE MAIN
# ==========================================

Write-Host "üåø Configuration de la branche main..." -ForegroundColor Blue
git branch -M main

# ==========================================
# 7. AJOUTER LE REMOTE GITHUB
# ==========================================

Write-Host "üîó Ajout du remote GitHub..." -ForegroundColor Blue
git remote add origin https://github.com/parfait71/ecommerce-laravel.git

# ==========================================
# 8. PUSHER SUR GITHUB
# ==========================================

Write-Host "üöÄ Push sur GitHub..." -ForegroundColor Blue
git push -u origin main

# ==========================================
# 9. CR√âER LA BRANCHE POUR GNAW√â PARFAIT
# ==========================================

Write-Host "üîß Cr√©ation de la branche pour Gnaw√© Parfait..." -ForegroundColor Blue
git checkout -b gnaw√©-parfait-backend

$gnaw√©Commit = @"
üîß Backend & API - Gnaw√© Parfait

‚úÖ Responsabilit√©s:
- Contr√¥leurs (Admin, User, Order, Product, Analytics)
- Mod√®les Eloquent (User, Product, Order, Category, etc.)
- Services m√©tier (EmailService, InvoiceService)
- Int√©grations de paiement (WavePaymentController)
- Syst√®me d'analytics avanc√©
- Tests automatis√©s complets
- Migrations de base de donn√©es
- Configuration de s√©curit√©

üéØ Technologies utilis√©es:
- Laravel 9
- PHP 8.0+
- MySQL
- Composer
- PHPUnit pour les tests

üìä Fonctionnalit√©s d√©velopp√©es:
- API REST compl√®te
- Authentification et autorisation
- Gestion des paiements
- G√©n√©ration de factures PDF
- Syst√®me d'emails automatiques
- Analytics et rapports
- Tests de r√©gression
"@

git commit --allow-empty -m $gnaw√©Commit
git push -u origin gnaw√©-parfait-backend

# ==========================================
# 10. CR√âER LA BRANCHE POUR SOKHNA NDACK
# ==========================================

Write-Host "üé® Cr√©ation de la branche pour Sokhna Ndack..." -ForegroundColor Blue
git checkout main
git checkout -b sokhna-ndack-frontend

$sokhnaCommit = @"
üé® Frontend & UI/UX - Sokhna Ndack

‚úÖ Responsabilit√©s:
- Vues Blade (layouts, composants, pages)
- Templates d'emails
- Templates PDF
- Interface utilisateur responsive
- Design et exp√©rience utilisateur
- Int√©gration des assets CSS/JS
- Formulaires et validation c√¥t√© client
- Navigation et menus

üéØ Technologies utilis√©es:
- Blade Templates
- HTML5/CSS3
- JavaScript/jQuery
- Bootstrap/Tailwind
- Responsive Design

üì± Fonctionnalit√©s d√©velopp√©es:
- Interface client (catalogue, panier, checkout)
- Interface admin (dashboard, gestion)
- Design responsive mobile/desktop
- Formulaires interactifs
- Notifications utilisateur
- Navigation intuitive
- Optimisation UX
"@

git commit --allow-empty -m $sokhnaCommit
git push -u origin sokhna-ndack-frontend

# ==========================================
# 11. RETOURNER SUR LA BRANCHE MAIN
# ==========================================

Write-Host "üîÑ Retour sur la branche main..." -ForegroundColor Blue
git checkout main

# ==========================================
# 12. V√âRIFICATION FINALE
# ==========================================

Write-Host "‚úÖ V√©rification finale..." -ForegroundColor Blue
git status
git branch -a
git remote -v

# ==========================================
# 13. R√âSUM√â FINAL
# ==========================================

Write-Host ""
Write-Host "üéâ D√©ploiement termin√© avec succ√®s!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã V√©rifications √† faire:" -ForegroundColor Yellow
Write-Host "1. Aller sur https://github.com/parfait71/ecommerce-laravel" -ForegroundColor White
Write-Host "2. V√©rifier que les 3 branches sont pr√©sentes:" -ForegroundColor White
Write-Host "   - main" -ForegroundColor White
Write-Host "   - gnaw√©-parfait-backend" -ForegroundColor White
Write-Host "   - sokhna-ndack-frontend" -ForegroundColor White
Write-Host "3. V√©rifier que tous les fichiers sont pr√©sents" -ForegroundColor White
Write-Host "4. Tester le clone: git clone https://github.com/parfait71/ecommerce-laravel.git" -ForegroundColor White
Write-Host ""
Write-Host "üìö Fichiers importants pour le professeur:" -ForegroundColor Yellow
Write-Host "- README.md (guide principal)" -ForegroundColor White
Write-Host "- GUIDE_PRESENTATION.md (guide de pr√©sentation)" -ForegroundColor White
Write-Host "- RESUME_PROJET.md (r√©sum√© complet)" -ForegroundColor White
Write-Host "- validate_project.php (validation automatique)" -ForegroundColor White
Write-Host ""
Write-Host "üöÄ Le professeur peut maintenant cloner et utiliser le projet!" -ForegroundColor Green

# ==========================================
# 14. COMMANDES ALTERNATIVES (si erreur)
# ==========================================

Write-Host ""
Write-Host "üîÑ Si vous avez des erreurs, utilisez ces commandes:" -ForegroundColor Yellow
Write-Host ""
Write-Host "# Forcer le push (si n√©cessaire)" -ForegroundColor White
Write-Host "git push -u origin main --force" -ForegroundColor Gray
Write-Host "git push -u origin gnaw√©-parfait-backend --force" -ForegroundColor Gray
Write-Host "git push -u origin sokhna-ndack-frontend --force" -ForegroundColor Gray
Write-Host ""
Write-Host "# V√©rifier les permissions" -ForegroundColor White
Write-Host "git config --list" -ForegroundColor Gray
Write-Host ""
Write-Host "# R√©initialiser si n√©cessaire" -ForegroundColor White
Write-Host "git remote remove origin" -ForegroundColor Gray
Write-Host "git remote add origin https://github.com/parfait71/ecommerce-laravel.git" -ForegroundColor Gray 