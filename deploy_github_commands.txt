# üöÄ Commandes pour d√©ployer EazyStore sur GitHub
# Repository: https://github.com/parfait71/ecommerce-laravel

# ==========================================
# 1. INITIALISATION GIT (si pas d√©j√† fait)
# ==========================================

# Initialiser Git (si pas d√©j√† fait)
git init

# Configurer Git
git config user.name "Gnaw√© Parfait"
git config user.email "votre-email@gmail.com"

# ==========================================
# 2. CR√âER LE FICHIER .gitignore
# ==========================================

# Cr√©er le fichier .gitignore
echo "# Laravel" > .gitignore
echo "/node_modules" >> .gitignore
echo "/public/hot" >> .gitignore
echo "/public/storage" >> .gitignore
echo "/storage/*.key" >> .gitignore
echo "/vendor" >> .gitignore
echo ".env" >> .gitignore
echo ".env.backup" >> .gitignore
echo ".phpunit.result.cache" >> .gitignore
echo "docker-compose.override.yml" >> .gitignore
echo "Homestead.json" >> .gitignore
echo "Homestead.yaml" >> .gitignore
echo "npm-debug.log" >> .gitignore
echo "yarn-error.log" >> .gitignore
echo "" >> .gitignore
echo "# IDE" >> .gitignore
echo ".idea/" >> .gitignore
echo ".vscode/" >> .gitignore
echo "*.swp" >> .gitignore
echo "*.swo" >> .gitignore
echo "" >> .gitignore
echo "# OS" >> .gitignore
echo ".DS_Store" >> .gitignore
echo "Thumbs.db" >> .gitignore
echo "" >> .gitignore
echo "# Logs" >> .gitignore
echo "*.log" >> .gitignore
echo "" >> .gitignore
echo "# Cache" >> .gitignore
echo "bootstrap/cache/" >> .gitignore
echo "storage/framework/cache/" >> .gitignore
echo "storage/framework/sessions/" >> .gitignore
echo "storage/framework/views/" >> .gitignore
echo "" >> .gitignore
echo "# Uploads (garder la structure mais pas les fichiers)" >> .gitignore
echo "storage/app/public/uploads/*" >> .gitignore
echo "!storage/app/public/uploads/.gitkeep" >> .gitignore
echo "" >> .gitignore
echo "# Tests" >> .gitignore
echo ".phpunit.cache/" >> .gitignore
echo "" >> .gitignore
echo "# Composer" >> .gitignore
echo "composer.phar" >> .gitignore
echo "" >> .gitignore
echo "# Node" >> .gitignore
echo "node_modules/" >> .gitignore
echo "npm-debug.log*" >> .gitignore
echo "yarn-debug.log*" >> .gitignore
echo "yarn-error.log*" >> .gitignore
echo "" >> .gitignore
echo "# Environment files" >> .gitignore
echo ".env.local" >> .gitignore
echo ".env.production" >> .gitignore
echo ".env.staging" >> .gitignore
echo "" >> .gitignore
echo "# Backup files" >> .gitignore
echo "*.bak" >> .gitignore
echo "*.backup" >> .gitignore

# ==========================================
# 3. CR√âER LES DOSSIERS ET FICHIERS N√âCESSAIRES
# ==========================================

# Cr√©er les dossiers n√©cessaires
mkdir -p storage/app/public/uploads
mkdir -p storage/framework/cache
mkdir -p storage/framework/sessions
mkdir -p storage/framework/views
mkdir -p .github/workflows

# Cr√©er les fichiers .gitkeep
touch storage/app/public/uploads/.gitkeep
touch storage/framework/cache/.gitkeep
touch storage/framework/sessions/.gitkeep
touch storage/framework/views/.gitkeep

# ==========================================
# 4. AJOUTER TOUS LES FICHIERS
# ==========================================

# Ajouter tous les fichiers
git add .

# ==========================================
# 5. PREMIER COMMIT
# ==========================================

git commit -m "üéâ Initial commit - EazyStore e-commerce platform

‚úÖ Fonctionnalit√©s compl√®tes:
- Front-office (catalogue, panier, commandes)
- Back-office (gestion produits, commandes, analytics)
- Syst√®me de paiement (Wave + Cash on Delivery)
- G√©n√©ration automatique de factures PDF
- Emails de confirmation automatiques
- Tests automatis√©s complets
- Documentation compl√®te

üë®‚Äçüíª √âquipe:
- Gnaw√© Parfait (Backend & API)
- Sokhna Ndack (Frontend & UI/UX)

üìö Documentation incluse:
- README.md (guide principal)
- GUIDE_PRESENTATION.md (guide de pr√©sentation)
- RESUME_PROJET.md (r√©sum√© complet)
- validate_project.php (validation automatique)

üöÄ Pr√™t pour la pr√©sentation!"

# ==========================================
# 6. CONFIGURER LA BRANCHE MAIN
# ==========================================

# Cr√©er la branche main
git branch -M main

# ==========================================
# 7. AJOUTER LE REMOTE GITHUB
# ==========================================

# Ajouter le remote GitHub
git remote add origin https://github.com/parfait71/ecommerce-laravel.git

# ==========================================
# 8. PUSHER SUR GITHUB
# ==========================================

# Pousser la branche main
git push -u origin main

# ==========================================
# 9. CR√âER LA BRANCHE POUR GNAW√â PARFAIT
# ==========================================

# Cr√©er et basculer sur la branche backend
git checkout -b gnaw√©-parfait-backend

# Commit sp√©cifique pour Gnaw√©
git commit --allow-empty -m "üîß Backend & API - Gnaw√© Parfait

‚úÖ Responsabilit√©s:
- Contr√¥leurs (Admin, User, Order, Product, Analytics)
- Mod√®les Eloquent (User, Product, Order, Category, etc.)
- Services m√©tier (EmailService, InvoiceService)
- Int√©grations de paiement (WavePaymentController)
- Syst√®me d'analytics avanc√©
- Tests automatis√©s complets
- Migrations de base de donn√©es
- Configuration de s√©curit√©

üéØ Technologies utilis√©es:
- Laravel 9
- PHP 8.0+
- MySQL
- Composer
- PHPUnit pour les tests

üìä Fonctionnalit√©s d√©velopp√©es:
- API REST compl√®te
- Authentification et autorisation
- Gestion des paiements
- G√©n√©ration de factures PDF
- Syst√®me d'emails automatiques
- Analytics et rapports
- Tests de r√©gression"

# Pousser la branche backend
git push -u origin gnaw√©-parfait-backend

# ==========================================
# 10. CR√âER LA BRANCHE POUR SOKHNA NDACK
# ==========================================

# Retourner sur main
git checkout main

# Cr√©er et basculer sur la branche frontend
git checkout -b sokhna-ndack-frontend

# Commit sp√©cifique pour Sokhna
git commit --allow-empty -m "üé® Frontend & UI/UX - Sokhna Ndack

‚úÖ Responsabilit√©s:
- Vues Blade (layouts, composants, pages)
- Templates d'emails
- Templates PDF
- Interface utilisateur responsive
- Design et exp√©rience utilisateur
- Int√©gration des assets CSS/JS
- Formulaires et validation c√¥t√© client
- Navigation et menus

üéØ Technologies utilis√©es:
- Blade Templates
- HTML5/CSS3
- JavaScript/jQuery
- Bootstrap/Tailwind
- Responsive Design

üì± Fonctionnalit√©s d√©velopp√©es:
- Interface client (catalogue, panier, checkout)
- Interface admin (dashboard, gestion)
- Design responsive mobile/desktop
- Formulaires interactifs
- Notifications utilisateur
- Navigation intuitive
- Optimisation UX"

# Pousser la branche frontend
git push -u origin sokhna-ndack-frontend

# ==========================================
# 11. RETOURNER SUR LA BRANCHE MAIN
# ==========================================

# Retourner sur main
git checkout main

# ==========================================
# 12. V√âRIFICATION FINALE
# ==========================================

# V√©rifier le statut
git status

# V√©rifier les branches
git branch -a

# V√©rifier les remotes
git remote -v

# ==========================================
# 13. COMMANDES DE V√âRIFICATION
# ==========================================

echo "üéâ D√©ploiement termin√©!"
echo ""
echo "üìã V√©rifications √† faire:"
echo "1. Aller sur https://github.com/parfait71/ecommerce-laravel"
echo "2. V√©rifier que les 3 branches sont pr√©sentes:"
echo "   - main"
echo "   - gnaw√©-parfait-backend"
echo "   - sokhna-ndack-frontend"
echo "3. V√©rifier que tous les fichiers sont pr√©sents"
echo "4. Tester le clone: git clone https://github.com/parfait71/ecommerce-laravel.git"
echo ""
echo "üìö Fichiers importants pour le professeur:"
echo "- README.md (guide principal)"
echo "- GUIDE_PRESENTATION.md (guide de pr√©sentation)"
echo "- RESUME_PROJET.md (r√©sum√© complet)"
echo "- validate_project.php (validation automatique)"
echo ""
echo "üöÄ Le professeur peut maintenant cloner et utiliser le projet!"

# ==========================================
# 14. COMMANDES ALTERNATIVES (si erreur)
# ==========================================

echo ""
echo "üîÑ Si vous avez des erreurs, utilisez ces commandes:"
echo ""
echo "# Forcer le push (si n√©cessaire)"
echo "git push -u origin main --force"
echo "git push -u origin gnaw√©-parfait-backend --force"
echo "git push -u origin sokhna-ndack-frontend --force"
echo ""
echo "# V√©rifier les permissions"
echo "git config --list"
echo ""
echo "# R√©initialiser si n√©cessaire"
echo "git remote remove origin"
echo "git remote add origin https://github.com/parfait71/ecommerce-laravel.git" 